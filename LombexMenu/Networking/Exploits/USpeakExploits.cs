using ExitGames.Client.Photon;
using Photon.Realtime;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using UnityEngine;
using Utils;
using MelonLoader;
using LombexMenu.Configuration;

namespace LombexMenu.Networking.Exploits
{
    public static class USpeakExploits
    {
        private static IEnumerator USpeakEarrape()
        {
            while (ReferenceEquals(PlayerUtils.GetVRCPlayer(), null)) yield return new WaitForEndOfFrame();
            while (true)
            {
                if (StaticConfig.UseUSpeakExploit)
                {
                    byte[] USpeakMessage = Convert.FromBase64String("AgAAAKWkyYm7hjsA+H3owFygUv4w5B67lcSx14zff9FCPADiNbSwYWgE+O7DrSy5tkRecs21ljjofvebe6xsYlA4cVmgrd0=");
                    int ActorID = PhotonExtentions.GetPhotonID(PhotonExtentions.LoadBalancingClient.prop_Player_0);
                    byte[] bytes = BitConverter.GetBytes(VRC.SDKBase.Networking.GetServerTimeInMilliseconds());
                    byte[] Photonbytes = BitConverter.GetBytes(ActorID);
                    Buffer.BlockCopy(Photonbytes, 0, USpeakMessage, 0, 4);
                    Buffer.BlockCopy(bytes, 0, USpeakMessage, 4, 4);
                    for (int i = 0; i < 80; i++)
                    {
                        if (!StaticConfig.UseUSpeakExploit) break;
                        PhotonEvents.OpRaiseEvent(1, USpeakMessage, new RaiseEventOptions
                        {
                            field_Public_ReceiverGroup_0 = 0,
                            field_Public_EventCaching_0 = 0
                        }, default(SendOptions));
                    }
                    yield return new WaitForSeconds(0.1f);
                }
                else yield break;
            }
        }
        public static void StartUSpeakExploits() => MelonCoroutines.Start(USpeakEarrape());
    }
}
